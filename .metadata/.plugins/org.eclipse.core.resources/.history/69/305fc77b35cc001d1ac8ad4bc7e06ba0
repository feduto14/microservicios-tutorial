package ar.com.moto.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import ar.com.moto.entity.Moto;
import ar.com.moto.service.MotoService;

@RestController
@RequestMapping("/moto")
public class MotoController {
	
	@Autowired
	private MotoService service;
	
	@GetMapping
	public ResponseEntity<List<Moto>> listarCarros () {
		List<Moto> motos = service.getAll();
		
		if (motos.isEmpty()) {
			return ResponseEntity.noContent().build();
		}
		return ResponseEntity.ok(motos);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Moto> obtenerMoto (@PathVariable("id") Integer id) {
		Moto carro = service.getMotoById(id);
		
		if (carro == null) {
			return ResponseEntity.notFound().build();
		}
		return ResponseEntity.ok(carro);
	}
	
	@PostMapping
	public ResponseEntity<Moto> guardarMoto (@RequestBody Moto moto) {
		Moto newMoto = service.save(moto);
		return ResponseEntity.ok(newMoto);
	}
	
	@GetMapping("/usuario/{userId}")
	public ResponseEntity<List<Moto>> listarCarrosPorUserId (@PathVariable("userId") Integer id) {
		List<Moto> motos = service.getMotosByUserId(id);
		
		if (motos.isEmpty()) {
			return ResponseEntity.noContent().build();
		}
		return ResponseEntity.ok(motos);
	}
	
	

}
